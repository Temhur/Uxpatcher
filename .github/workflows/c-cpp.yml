name: Build Uxpatcher (MSVC)

on:
  push:
    paths:
      - 'uxptch.cpp'
      - '.github/workflows/**'
  pull_request:
    paths:
      - 'uxptch.cpp'
      - '.github/workflows/**'

jobs:
  build-windows:
    name: Build on Windows (x64)
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find Visual Studio installation
        id: find_vs
        shell: powershell
        run: |
          $vs = &"${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath
          if (-not $vs) {
            Write-Error "Visual Studio no encontrado en el runner."
            exit 1
          }
          # Exponer como output para pasos siguientes
          Add-Content -Path $env:GITHUB_OUTPUT -Value "vs_path=$vs"
          Write-Host "Visual Studio encontrado en: $vs"

      - name: Build with MSVC (cl.exe)
        # Use cmd so we can 'call' the batch file and preserve its environment for the same shell session
        shell: cmd
        env:
          VS_PATH: ${{ steps.find_vs.outputs.vs_path }}
        run: |
          echo Preparando entorno de Visual Studio desde "%VS_PATH%"
          call "%VS_PATH%\Common7\Tools\VsDevCmd.bat" -arch=amd64
          if errorlevel 1 (
            echo VsDevCmd falló
            exit /b 1
          )
          echo Compilando uxptch.cpp...
          cl.exe /EHsc /std:c++17 /O2 uxptch.cpp Dbghelp.lib /Fe:uxptch.exe
          if errorlevel 1 (
            echo Compilación falló
            exit /b 1
          )
          echo Resultado del directorio:
          dir

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: uxptch-windows-x64
          path: uxptch.exe
